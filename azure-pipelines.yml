trigger:
  batch: true
  branches:
    include:
      - master
      - stage
      - release/*
      - develop
      - hotfix/*
      #- feature/*

variables:
  - group: VARIABLE-ENTORNO-ADMISIONDIGITAL

  - name: DockerRepository
    value: "desa/admision_digital/achs-ms-orquestador"
  - name: ImageTag
    value: "_$(Build.BuildId)"


pool:
  vmImage: $(vmImageName)

stages:
  - stage: INFO
    displayName: "Building"
    jobs:
      - deployment: Info
        displayName: "Info"
        environment: "Info"
      - job: Build
        displayName: "Info"
        steps:
          - script: |
              echo "TargetBranch" $(System.PullRequest.TargetBranch)
              echo "sourceBranch " $(System.pullRequest.sourceBranch)

              echo "appNameDESA: " $(appNameDESAOrq)
              echo "appNameQA: " $(appNameQAOrq)
              echo "appNameSTG: " $(appNameSTGOrq)
              echo "appNameProd: " $(appNameProdOrq)
              echo "azureAdDesarrollo: " $(azureAdDesarrollo)
              echo "azureAdQa: " $(azureAdQa)
              echo "azureAdStg: " $(azureAdStg)
              echo "azureAdProd: " $(azureAdProd)
              echo "azureSubcritionDESA: " $(azureSubcritionDESA)
              echo "azureSubcritionQA: " $(azureSubcritionQA)
              echo "azureSubcritionSTG: " $(azureSubcritionSTG)
              echo "azureSubcritionProd: " $(azureSubcritionProd)
              echo "ContainerRegistryName: " $(ContainerRegistryName)
              echo "vmImageName: " $(vmImageName)
              echo "sourceBranchDesa: " $(sourceBranchDesa)
              echo "sourceBranchQa: " $(sourceBranchQa)
              echo "sourceBranchStg: " $(sourceBranchStg)
              echo "sourceBranchProd: " $(sourceBranchProd)
  # STAGE
  - stage: Deploy_DESA
    displayName: "Building Desploy DESA"
    condition: |
      or(
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDesa']),
          eq(variables['Build.Reason'], 'PullRequest')
        ), 
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployDesaHotfix']),
          eq(variables['Build.Reason'], 'PullRequest')
        )
      ) 
    jobs:
      - deployment: Deploy
        displayName: "Deploy DESA"
        environment: "Deploy_DESA"
      - job: Build
        displayName: "Deploy_DESA"
        steps:
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepository)
              command: build
              Dockerfile: ./Dockerfile
              tags: $(ImageTag)
              arguments: --build-arg env=development
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepository)
              command: push
              tags: $(ImageTag)
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureSubcritionDESA)
              appName: $(appNameDESA)
              containers: $(ContainerRegistryName).azurecr.io/$(DockerRepository):$(ImageTag)
  - stage: Deploy_QA
    displayName: "Building Deploy QA"
    condition: |
        or( 
         and(
            startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchQa']),
            eq(variables['Build.Reason'], 'PullRequest')
          ), 
          and(
            startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployQaHotfix']),
            eq(variables['Build.Reason'], 'PullRequest')
          )
        )
    jobs:
      - deployment: Deploy
        displayName: "Deploy QA"
        environment: "Deploy_QA"
      - job: Build
        displayName: "Deploy QA"
        steps:
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepository)
              command: build
              Dockerfile: ./Dockerfile
              tags: $(ImageTag)
              arguments: --build-arg env=QA
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepository)
              command: push
              tags: $(ImageTag)
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureSubcritionQA)
              appName: $(appNameQA)
              containers: $(ContainerRegistryName).azurecr.io/$(DockerRepository):$(ImageTag)
  - stage: Deploy_STG
    displayName: "Building Deploy STG"
    condition: |
      or(
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchStg']),
          eq(variables['Build.Reason'], 'PullRequest')
        ), 
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployStgHotfix']),
          eq(variables['Build.Reason'], 'PullRequest')
        )         
       )   
    jobs:
      - deployment: Deploy
        displayName: "Deploy STG"
        environment: "Deploy_STG"
      - job: Build
        displayName: "Deploy STG"
        steps:
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepository)
              command: build
              Dockerfile: ./Dockerfile
              tags: $(ImageTag)
              arguments: --build-arg env=staging
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepository)
              command: push
              tags: $(ImageTag)
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureSubcritionSTG)
              appName: $(appNameSTG)
              containers: $(ContainerRegistryName).azurecr.io/$(DockerRepository):$(ImageTag)
