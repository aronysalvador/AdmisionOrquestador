trigger:
  batch: true
  branches:
    include:
      - master
      - stage
      - release/*
      - develop
      - hotfix/*
      #- feature/*

variables:
  - group: VARIABLE-ENTORNO-ADMISIONDIGITAL

  - name: Repository
    value: "admision_digital/achs-ms-orquestador"
  - name: DockerRepositoryDesa
    value: desa/${{variables['Repository'] }} 
  - name: DockerRepositoryQA
    value: qa/${{variables['Repository'] }} 
  - name: DockerRepositoryProd
    value: prod/${{variables['Repository'] }} 

  - name: ImageTag
    value: "_$(Build.BuildId)"


pool:
  vmImage: $(vmImageName)

stages:
  - stage: INFO
    displayName: "Building"
    jobs:
      - deployment: Info
        displayName: "Info"
        environment: "Info"
      - job: Build
        displayName: "Info"
        steps:
          - script: |
              echo "TargetBranch" $(System.PullRequest.TargetBranch)
              echo "sourceBranch " $(System.pullRequest.sourceBranch)
                          
  # STAGE
  - stage: Deploy_DESA
    displayName: "Building Desploy DESA"
    condition: |
      or(
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDesa']),
          eq(variables['Build.Reason'], 'PullRequest')
        ), 
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployDesaHotfix']),
          eq(variables['Build.Reason'], 'PullRequest')
        ),
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployHotfix']),
          eq(variables['Build.Reason'], 'PullRequest')
        )
      ) 
    jobs:
      - deployment: Deploy
        displayName: "Deploy DESA"
        environment: "Deploy_DESA"
      - job: Build
        displayName: "Deploy_DESA"
        steps:
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepositoryDesa)
              command: build
              Dockerfile: ./Dockerfile
              tags: $(ImageTag)
              arguments: --build-arg env=development
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepositoryDesa)
              command: push
              tags: $(ImageTag)
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureSubcritionDESA)
              appName: $(appNameDESAOrq)
              containers: $(ContainerRegistryName).azurecr.io/$(DockerRepositoryDesa):$(ImageTag)
  - stage: Deploy_QA
    displayName: "Building Deploy QA"
    condition: |
       or( 
         and(
            startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchQa']),
            startsWith(variables['system.pullRequest.TargetBranch'], variables['TargetBranchQa']),
            eq(variables['Build.Reason'], 'PullRequest')
          ), 
          and(
            startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployQaHotfix']),
            eq(variables['Build.Reason'], 'PullRequest')
          ),
          and(
            startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployHotfix']),
            eq(variables['Build.Reason'], 'PullRequest')
          )
        )
    jobs:
      - deployment: Deploy
        displayName: "Deploy QA"
        environment: "Deploy_QA"
      - job: Build
        displayName: "Deploy QA"
        steps:
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepositoryQA)
              command: build
              Dockerfile: ./Dockerfile
              tags: $(ImageTag)
              arguments: --build-arg env=QA
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepositoryQA)
              command: push
              tags: $(ImageTag)
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureSubcritionQA)
              appName: $(appNameQAOrq)
              containers: $(ContainerRegistryName).azurecr.io/$(DockerRepositoryQA):$(ImageTag)
  # - stage: Deploy_STG
  #   displayName: "Building Deploy STG"
  #   condition: |
  #     or(
  #       and(
  #         startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchStg']),
  #         eq(variables['Build.Reason'], 'PullRequest')
  #       ), 
  #       and(
  #         startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployStgHotfix']),
  #         eq(variables['Build.Reason'], 'PullRequest')
  #       )         
  #      )   
  #   jobs:
  #     - deployment: Deploy
  #       displayName: "Deploy STG"
  #       environment: "Deploy_STG"
  #     - job: Build
  #       displayName: "Deploy STG"
  #       steps:
  #         - task: Docker@2
  #           displayName: Build Docker Image
  #           inputs:
  #             containerRegistry: $(ContainerRegistryName)
  #             repository: $(DockerRepository)
  #             command: build
  #             Dockerfile: ./Dockerfile
  #             tags: $(ImageTag)
  #             arguments: --build-arg env=staging
  #         - task: Docker@2
  #           displayName: Push Docker Image
  #           inputs:
  #             containerRegistry: $(ContainerRegistryName)
  #             repository: $(DockerRepository)
  #             command: push
  #             tags: $(ImageTag)
  #         - task: AzureWebAppContainer@1
  #           inputs:
  #             azureSubscription: $(azureSubcritionSTG)
  #             appName: $(appNameSTGOrq)
  #             containers: $(ContainerRegistryName).azurecr.io/$(DockerRepository):$(ImageTag)
  - stage: Deploy_PROD
    displayName: "Building Deploy PROD"
    condition: |
      or(
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchProd']),
          startsWith(variables['system.pullRequest.TargetBranch'], variables['TargetBranchProd']),
          eq(variables['Build.Reason'], 'PullRequest')
        ), 
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployProdHotfix']),
          eq(variables['Build.Reason'], 'PullRequest')
        ),        
        and(
          startsWith(variables['system.pullRequest.sourceBranch'], variables['sourceBranchDeployHotfix']),
          eq(variables['Build.Reason'], 'PullRequest')
        )         
       ) 
    jobs:
      - deployment: Deploy
        displayName: "Deploy PROD"
        environment: "Deploy_PROD"
      - job: Build
        displayName: "Deploy PROD"
        steps:
          - task: Docker@2
            displayName: Build Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepositoryProd)
              command: build
              Dockerfile: ./Dockerfile
              tags: $(ImageTag)
              arguments: --build-arg env=production
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              containerRegistry: $(ContainerRegistryName)
              repository: $(DockerRepositoryProd)
              command: push
              tags: $(ImageTag)
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureSubcritionProd)
              appName: $(appNameProdOrq)
              containers: $(ContainerRegistryName).azurecr.io/$(DockerRepositoryProd):$(ImageTag)    
